import{useSignal}from"@preact/signals";import{createElement as t,Fragment as n}from"preact";import{useMemo as r}from"preact/hooks";function e(t){const n=t.when.value;if(!n)return t.fallback||null;else return"function"==typeof t.children?t.children(n):t.children}function o(e){const o=r(()=>new Map,[]);let u=("function"==typeof e.each?e.each():e.each).value;if(!u.length)return e.fallback||null;const c=u.map((t,n)=>{if(!o.has(t))o.set(t,e.children(t,n));return o.get(t)});return t(n,null,c)}function u(t){const n=useSignal(t);if(n.peek()!==t)n.value=t;return n}function c(t){const n=useSignal(t);if(!("current"in n))Object.defineProperty(n,"current",i);return n}const i={configurable:!0,get(){return this.value},set(t){this.value=t}};export{o as For,e as Show,u as useLiveSignal,c as useSignalRef};//# sourceMappingURL=utils.mjs.map
