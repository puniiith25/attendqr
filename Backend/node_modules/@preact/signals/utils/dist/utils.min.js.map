{"version":3,"file":"utils.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ReadonlySignal, Signal } from \"@preact/signals-core\";\nimport { useSignal } from \"@preact/signals\";\nimport { Fragment, createElement, JSX } from \"preact\";\nimport { useMemo } from \"preact/hooks\";\n\ninterface ShowProps<T = boolean> {\n\twhen: Signal<T> | ReadonlySignal<T>;\n\tfallback?: JSX.Element;\n\tchildren: JSX.Element | ((value: NonNullable<T>) => JSX.Element);\n}\n\nexport function Show<T = boolean>(props: ShowProps<T>): JSX.Element | null {\n\tconst value = props.when.value;\n\tif (!value) return props.fallback || null;\n\treturn typeof props.children === \"function\"\n\t\t? props.children(value)\n\t\t: props.children;\n}\n\ninterface ForProps<T> {\n\teach:\n\t\t| Signal<Array<T>>\n\t\t| ReadonlySignal<Array<T>>\n\t\t| (() => Signal<Array<T>> | ReadonlySignal<Array<T>>);\n\tfallback?: JSX.Element;\n\tchildren: (value: T, index: number) => JSX.Element;\n}\n\nexport function For<T>(props: ForProps<T>): JSX.Element | null {\n\tconst cache = useMemo(() => new Map(), []);\n\tlet list = (\n\t\t(typeof props.each === \"function\" ? props.each() : props.each) as Signal<\n\t\t\tArray<T>\n\t\t>\n\t).value;\n\n\tif (!list.length) return props.fallback || null;\n\n\tconst items = list.map((value, key) => {\n\t\tif (!cache.has(value)) {\n\t\t\tcache.set(value, props.children(value, key));\n\t\t}\n\t\treturn cache.get(value);\n\t});\n\n\treturn createElement(Fragment, null, items);\n}\n\nexport function useLiveSignal<T>(\n\tvalue: Signal<T> | ReadonlySignal<T>\n): Signal<Signal<T> | ReadonlySignal<T>> {\n\tconst s = useSignal(value);\n\tif (s.peek() !== value) s.value = value;\n\treturn s;\n}\n\nexport function useSignalRef<T>(value: T): Signal<T> & { current: T } {\n\tconst ref = useSignal(value) as Signal<T> & { current: T };\n\tif (!(\"current\" in ref))\n\t\tObject.defineProperty(ref, \"current\", refSignalProto);\n\treturn ref;\n}\nconst refSignalProto = {\n\tconfigurable: true,\n\tget(this: Signal) {\n\t\treturn this.value;\n\t},\n\tset(this: Signal, v: any) {\n\t\tthis.value = v;\n\t},\n};\n"],"names":["g","f","exports","module","require","define","amd","globalThis","self","preactSignalsutils","signals","preact","preactHooks","this","hooks","refSignalProto","configurable","get","value","set","v","For","props","cache","useMemo","Map","list","each","length","fallback","items","map","key","has","children","createElement","Fragment","Show","when","useLiveSignal","s","useSignal","peek","useSignalRef","ref","Object","defineProperty"],"mappings":"CAWgB,SAAAA,EAAAC,GAAA,iBAAAC,SAAA,oBAAAC,OAAAF,EAAAC,QAAAE,QAAA,mBAAAA,QAAA,UAAAA,QAAA,iBAAA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,UAAA,kBAAA,SAAA,gBAAAJ,GAAAA,GAAAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,mBAAA,CAAA,EAAAT,EAAAU,QAAAV,EAAAW,OAAAX,EAAAY,YAAA,CAAA,CAAAC,KAAA,SAAAX,EAAAQ,EAAAC,EAAAG,GAmDhB,IAAMC,EAAiB,CACtBC,cAAc,EACdC,eACC,OAAOJ,KAAKK,KACb,EACAC,IAAA,SAAkBC,GACjBP,KAAKK,MAAQE,CACd,GACAlB,EAAAmB,IA1Ce,SAAOC,GACtB,IAAMC,EAAQC,EAAAA,QAAQ,kBAAU,IAAAC,GAAK,EAAE,IACnCC,GACoB,mBAAfJ,EAAMK,KAAsBL,EAAMK,OAASL,EAAMK,MAGxDT,MAEF,IAAKQ,EAAKE,OAAQ,OAAON,EAAMO,UAAY,KAE3C,IAAMC,EAAQJ,EAAKK,IAAI,SAACb,EAAOc,GAC9B,IAAKT,EAAMU,IAAIf,GACdK,EAAMJ,IAAID,EAAOI,EAAMY,SAAShB,EAAOc,IAExC,OAAOT,EAAMN,IAAIC,EAClB,GAEA,OAAOiB,EAAAA,cAAcC,EAAAA,SAAU,KAAMN,EACtC,EAwBC5B,EAAAmC,KA3De,SAAkBf,GACjC,IAAMJ,EAAQI,EAAMgB,KAAKpB,MACzB,IAAKA,EAAO,OAAOI,EAAMO,UAAY,UACrC,MAAiC,mBAAnBP,EAAMY,SACjBZ,EAAMY,SAAShB,GACfI,EAAMY,QACV,EAqDChC,EAAAqC,cAtBe,SACfrB,GAEA,IAAMsB,EAAIC,EAASA,UAACvB,GACpB,GAAIsB,EAAEE,SAAWxB,EAAOsB,EAAEtB,MAAQA,EAClC,OAAOsB,CACR,EAgBCtC,EAAAyC,aAde,SAAgBzB,GAC/B,IAAM0B,EAAMH,EAASA,UAACvB,GACtB,KAAM,YAAa0B,GAClBC,OAAOC,eAAeF,EAAK,UAAW7B,GACvC,OAAO6B,CACR,CASC"}